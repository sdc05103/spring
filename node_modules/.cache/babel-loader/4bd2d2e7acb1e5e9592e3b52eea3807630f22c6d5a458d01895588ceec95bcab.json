{"ast":null,"code":"var _jsxFileName = \"/Users/euijung/Desktop/\\u110C\\u1169\\u11AF\\u1111\\u1173/dev/creditpartner/spring/src/components/auth/LoginForm.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n//import { changeField, initializeForm, login } from '../main/modules/auth';\nimport { login } from './api/auth';\nimport AuthForm from './AuthForm';\nimport { useNavigate } from 'react-router-dom';\n//import { check } from '../main/modules/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [userId, setUserId] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const onChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    switch (name) {\n      case 'userId':\n        setUserId(value);\n        console.log(userId);\n        break;\n      case 'password':\n        setPassword(value);\n        console.log(password);\n        break;\n      default:\n        break;\n    }\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n    if ([userId, password].includes('')) {\n      setError('빈 칸을 모두 입력하세요.');\n      return;\n    }\n    console.log({\n      userId,\n      password\n    });\n    //post\n    const response = login(userId, password);\n    /*\n    if(response.response.status===409) {\n        setError('로그인 실패!');\n    }\n    else {\n        alert('로그인되었습니다.');\n        navigate('/');\n    }\n    */\n  };\n  /*\n      useEffect(() => {\n          if(authError) {\n              console.log('오류 발생');\n              console.log(authError);\n              setError('로그인 실패');\n              return;\n          }\n          if(auth) {\n              console.log('로그인 성공');\n              dispatch(check());\n          }\n      }, [auth, authError, dispatch]);\n  \n      useEffect(() => {\n          if(user) {\n              alert('로그인 되었습니다.')\n              navigate('/');\n              try {\n                  localStorage.setItem('user', JSON.stringify(user));\n              } catch (e) {\n                  console.log('localStorage is not working');\n              }\n          }\n      }, [navigate, user]);\n  */\n\n  return /*#__PURE__*/_jsxDEV(AuthForm, {\n    type: \"login\",\n    form: {\n      userId,\n      password\n    },\n    onChange: onChange,\n    onSubmit: onSubmit,\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginForm, \"jQ6iCaYM3qCB07mBUAxgd2ag/3s=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","login","AuthForm","useNavigate","jsxDEV","_jsxDEV","LoginForm","_s","error","setError","userId","setUserId","password","setPassword","navigate","onChange","e","value","name","target","console","log","onSubmit","preventDefault","includes","response","type","form","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/euijung/Desktop/졸프/dev/creditpartner/spring/src/components/auth/LoginForm.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n//import { changeField, initializeForm, login } from '../main/modules/auth';\nimport { login } from './api/auth';\nimport AuthForm from './AuthForm';\nimport { useNavigate } from 'react-router-dom';\n//import { check } from '../main/modules/user';\n\nconst LoginForm = () => {\n    const [error, setError] = useState(null);\n    const [userId, setUserId] = useState('');\n    const [password, setPassword] = useState('');\n\n    const navigate = useNavigate();\n\n    const onChange = e => {\n        const { value, name } = e.target;\n        switch (name) {\n            case 'userId':\n                setUserId(value);\n                console.log(userId);\n                break;\n            case 'password':\n                setPassword(value);\n                console.log(password);\n                break;\n            default:\n                break;\n        }\n\n    };\n\n    const onSubmit = e => {\n        e.preventDefault();\n        if([userId, password].includes('')) {\n            setError('빈 칸을 모두 입력하세요.');\n            return;\n        }\n        console.log({userId, password});\n        //post\n        const response = login(userId, password);\n        /*\n        if(response.response.status===409) {\n            setError('로그인 실패!');\n        }\n        else {\n            alert('로그인되었습니다.');\n            navigate('/');\n        }\n        */\n    };\n/*\n    useEffect(() => {\n        if(authError) {\n            console.log('오류 발생');\n            console.log(authError);\n            setError('로그인 실패');\n            return;\n        }\n        if(auth) {\n            console.log('로그인 성공');\n            dispatch(check());\n        }\n    }, [auth, authError, dispatch]);\n\n    useEffect(() => {\n        if(user) {\n            alert('로그인 되었습니다.')\n            navigate('/');\n            try {\n                localStorage.setItem('user', JSON.stringify(user));\n            } catch (e) {\n                console.log('localStorage is not working');\n            }\n        }\n    }, [navigate, user]);\n*/\n\n    return (\n        <AuthForm \n            type=\"login\"\n            form={{userId, password}}\n            onChange={onChange}\n            onSubmit={onSubmit}\n            error={error} />\n    );\n};\n\nexport default LoginForm;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD;AACA,SAASC,KAAK,QAAQ,YAAY;AAClC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMgB,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,QAAQ,GAAGC,CAAC,IAAI;IAClB,MAAM;MAAEC,KAAK;MAAEC;IAAK,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChC,QAAQD,IAAI;MACR,KAAK,QAAQ;QACTP,SAAS,CAACM,KAAK,CAAC;QAChBG,OAAO,CAACC,GAAG,CAACX,MAAM,CAAC;QACnB;MACJ,KAAK,UAAU;QACXG,WAAW,CAACI,KAAK,CAAC;QAClBG,OAAO,CAACC,GAAG,CAACT,QAAQ,CAAC;QACrB;MACJ;QACI;IACR;EAEJ,CAAC;EAED,MAAMU,QAAQ,GAAGN,CAAC,IAAI;IAClBA,CAAC,CAACO,cAAc,CAAC,CAAC;IAClB,IAAG,CAACb,MAAM,EAAEE,QAAQ,CAAC,CAACY,QAAQ,CAAC,EAAE,CAAC,EAAE;MAChCf,QAAQ,CAAC,gBAAgB,CAAC;MAC1B;IACJ;IACAW,OAAO,CAACC,GAAG,CAAC;MAACX,MAAM;MAAEE;IAAQ,CAAC,CAAC;IAC/B;IACA,MAAMa,QAAQ,GAAGxB,KAAK,CAACS,MAAM,EAAEE,QAAQ,CAAC;IACxC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC;EACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI,oBACIP,OAAA,CAACH,QAAQ;IACLwB,IAAI,EAAC,OAAO;IACZC,IAAI,EAAE;MAACjB,MAAM;MAAEE;IAAQ,CAAE;IACzBG,QAAQ,EAAEA,QAAS;IACnBO,QAAQ,EAAEA,QAAS;IACnBd,KAAK,EAAEA;EAAM;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAE5B,CAAC;AAACxB,EAAA,CA9EID,SAAS;EAAA,QAKMH,WAAW;AAAA;AAAA6B,EAAA,GAL1B1B,SAAS;AAgFf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}